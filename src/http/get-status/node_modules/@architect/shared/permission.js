const data = require("@begin/data");
const { md5 } = require("./utilities");

const nodeTable = "node-table";

async function permission(node, userId) {
    return await permissionRecursive(node, userId, 0, 10);
}
async function permissionRecursive(node, userId, depth, maxDepth) {
    if (userId === "user-root") {
        return "root";
    }
    let nextNode = node;
    if (node.key && !node.type && !node.host) {
        try {
            nextNode = await data.get({ table: nodeTable, key: node.key });
            if (!nextNode) {
                return false;
            }
        } catch (err) {
            return false;
        }
    }
    if (nextNode && nextNode.permissions && nextNode.permissions.includes(userId)) {
        return { depth };
    }
    if (depth >= maxDepth) {
        return false;
    }
    if (nextNode.path === "/" || nextNode.path === "") {
        return false;
    }
    try {
        const parent = await data.get({
            table: nodeTable,
            key: "node=" + md5((nextNode.host + nextNode.path).split("/").slice(0, -1).join("/")),
        });
        return await permissionRecursive(parent, userId, depth + 1, maxDepth);
    } catch (err) {
        return false;
    }
}

module.exports = permission;
